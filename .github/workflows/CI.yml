name: CI Pipeline

on: [push, pull_request]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint code
      run: |
        # Lint Python code
        pylint app/*.py
        # Lint Dockerfile
        docker run --rm hadolint/hadolint < Dockerfile
        # Lint dependencies
        pip check
        
  unit-tests:
    name: Unit Tests with Coverage
    runs-on: ubuntu-latest
    
    services:
      tasks-db:
        image: postgres:latest
        env:
          POSTGRES_USER: taskuser
          POSTGRES_PASSWORD: taskpassword
          POSTGRES_DB: taskdb
        ports:
          - "5433:5433"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
        docker-compose ps
        sleep 15  # Attendre quelques secondes pour s'assurer que les services sont démarrés

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests with coverage
      env:
        DATABASE_URL: postgresql://taskuser:taskpassword@tasks-db:5433/taskdb
      run: |
        pytest tests --cov=app

    - name: Stop Docker Compose services
      run: docker-compose -f docker-compose.yml down
